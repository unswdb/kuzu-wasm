import{_ as t,c as a,a1 as i,o as r}from"./chunks/framework.Cs4jecZi.js";const f=JSON.parse('{"title":"Overview","description":"","frontmatter":{},"headers":[],"relativePath":"guide/data-ingestion-overview.md","filePath":"guide/data-ingestion-overview.md"}'),o={name:"guide/data-ingestion-overview.md"};function l(s,e,n,h,m,d){return r(),a("div",null,e[0]||(e[0]=[i('<h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h1><h2 id="virtual-file-system-vfs" tabindex="-1">Virtual File System (VFS) <a class="header-anchor" href="#virtual-file-system-vfs" aria-label="Permalink to &quot;Virtual File System (VFS)&quot;">​</a></h2><p>Kuzu WASM leverages the <a href="https://emscripten.org/docs/api_reference/Filesystem-API.html" target="_blank" rel="noreferrer">Emscripten File System API</a> to manage file operations within a WebAssembly environment. To import files into Kuzu, the data files must first be placed in the Emscripten file system.</p><h2 id="import-data" tabindex="-1">Import Data <a class="header-anchor" href="#import-data" aria-label="Permalink to &quot;Import Data&quot;">​</a></h2><p>Currently, there are several ways to achieve this:</p><ul><li><a href="./writing-to-file.html">Directly Write to the VFS</a></li><li><a href="./fetch-from-network.html">Fetch from the Network (may be affected by CORS policy)</a></li><li><a href="./build-with-docker.html">Customized Kuzu WASM Built with Docker</a></li></ul>',6)]))}const u=t(o,[["render",l]]);export{f as __pageData,u as default};
